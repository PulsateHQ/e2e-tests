name: Run E2E Tests

on:
  repository_dispatch:
    types: [run-e2e-tests]

jobs:
  prepare-env:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    environment: ${{ github.event.client_payload.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
      - name: Get installed Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(node -e "
          const pkgLock = require('./package-lock.json');
          const playwrightVersion =
            (pkgLock.dependencies && pkgLock.dependencies['@playwright/test'] && pkgLock.dependencies['@playwright/test'].version) ||
            (pkgLock.devDependencies && pkgLock.devDependencies['@playwright/test'] && pkgLock.devDependencies['@playwright/test'].version) ||
            'not-found';
          console.log(playwrightVersion);
          ")
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-cache
        with:
          path: |
            node_modules
          key: node_modules-${{ hashFiles('package-lock.json') }}-${{ inputs.version }}
      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps firefox

  test:
    needs: [prepare-env]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
      - name: Check if dotenv-cli is installed
        run: npm list -g --depth=0
      - name: Create env file
        run: |
          cat << EOF > .env
          BASE_URL=${{ vars.BASE_URL }}
          API_E2E_APP_ID=${{ vars.API_E2E_APP_ID }}
          SDK_API_URL=${{ vars.SDK_API_URL }}
          API_E2E_ACCESS_TOKEN_ADMIN=${{ secrets.API_E2E_ACCESS_TOKEN_ADMIN }}
          API_E2E_ACCESS_TOKEN_SDK=${{ secrets.API_E2E_ACCESS_TOKEN_SDK }}
          ENVIRONMENT=${{ github.event.client_payload.environment }}
          EOF
      - name: Run Playwright tests
        run: npx dotenv -e .env -- npx playwright test --project=firefox

  reports:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Archive test results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-smoke-tests
          path: |
            playwright-report/**/*.*
            test-results/**/*.*
      - name: Publish smoke test report
        if: success() || failure()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: './playwright-report/results.xml'

  update-pr-status:
    needs: [reports]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Update PR Status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.E2E_PAT }}
          script: |
            try {
              const status = '${{ job.status }}'.toLowerCase();
              console.log('Attempting to create status with:', {
                owner: 'PulsateHQ',
                repo: 'smokesignals',
                sha: '${{ github.event.client_payload.commit_sha }}',
                state: status,
                context: 'e2e-tests/${{ github.event.client_payload.environment }}'
              });

              const response = await github.rest.repos.createCommitStatus({
                owner: 'PulsateHQ',
                repo: 'smokesignals',
                sha: '${{ github.event.client_payload.commit_sha }}',
                state: status,
                description: 'E2E tests completed with status: ${{ job.status }}',
                context: 'e2e-tests/${{ github.event.client_payload.environment }}'
              });

              console.log('GitHub API response:', response);
            } catch (error) {
              console.error('Failed to update PR status:', error);
              core.setFailed(`Failed to update PR status: ${error.message}`);
            }
